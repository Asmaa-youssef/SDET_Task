<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="12633" started-at="2020-04-19T18:34:54Z" finished-at="2020-04-19T18:35:07Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="12633" started-at="2020-04-19T18:34:54Z" finished-at="2020-04-19T18:35:07Z">
      <class name="tests.UserRegestrationTest">
        <test-method status="PASS" signature="startDriver()[pri:0, instance:tests.UserRegestrationTest@73ad2d6]" name="startDriver" is-config="true" duration-ms="17351" started-at="2020-04-19T18:34:37Z" finished-at="2020-04-19T18:34:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method status="FAIL" signature="userCanRegisterSuccessfully()[pri:1, instance:tests.UserRegestrationTest@73ad2d6]" name="userCanRegisterSuccessfully" duration-ms="7918" started-at="2020-04-19T18:34:54Z" finished-at="2020-04-19T18:35:02Z">
          <exception class="java.lang.Error">
            <message>
              <![CDATA[Unresolved compilation problem: 
sMyaccount cannot be resolved to a variable
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Error: Unresolved compilation problem: 
sMyaccount cannot be resolved to a variable

at pages.UserRegesteration.loginOutUser(UserRegesteration.java:70)
at tests.UserRegestrationTest.userCanRegisterSuccessfully(UserRegestrationTest.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Error -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanRegisterSuccessfully -->
        <test-method status="PASS" signature="takeScreenShootFailure(org.testng.ITestResult)[pri:0, instance:tests.UserRegestrationTest@73ad2d6]" name="takeScreenShootFailure" is-config="true" duration-ms="362" started-at="2020-04-19T18:35:02Z" finished-at="2020-04-19T18:35:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanRegisterSuccessfully status=FAILURE method=UserRegestrationTest.userCanRegisterSuccessfully()[pri:1, instance:tests.UserRegestrationTest@73ad2d6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShootFailure -->
        <test-method status="PASS" signature="checkpassword()[pri:2, instance:tests.UserRegestrationTest@73ad2d6]" name="checkpassword" duration-ms="5" started-at="2020-04-19T18:35:02Z" finished-at="2020-04-19T18:35:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkpassword -->
        <test-method status="PASS" signature="checkphone()[pri:3, instance:tests.UserRegestrationTest@73ad2d6]" name="checkphone" duration-ms="1" started-at="2020-04-19T18:35:02Z" finished-at="2020-04-19T18:35:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkphone -->
        <test-method status="PASS" signature="takeScreenShootFailure(org.testng.ITestResult)[pri:0, instance:tests.UserRegestrationTest@73ad2d6]" name="takeScreenShootFailure" is-config="true" duration-ms="0" started-at="2020-04-19T18:35:02Z" finished-at="2020-04-19T18:35:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkpassword status=SUCCESS method=UserRegestrationTest.checkpassword()[pri:2, instance:tests.UserRegestrationTest@73ad2d6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShootFailure -->
        <test-method status="PASS" signature="takeScreenShootFailure(org.testng.ITestResult)[pri:0, instance:tests.UserRegestrationTest@73ad2d6]" name="takeScreenShootFailure" is-config="true" duration-ms="0" started-at="2020-04-19T18:35:02Z" finished-at="2020-04-19T18:35:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkphone status=SUCCESS method=UserRegestrationTest.checkphone()[pri:3, instance:tests.UserRegestrationTest@73ad2d6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShootFailure -->
        <test-method status="PASS" signature="registeredUserCanLogin()[pri:4, instance:tests.UserRegestrationTest@73ad2d6]" name="registeredUserCanLogin" duration-ms="4324" started-at="2020-04-19T18:35:02Z" finished-at="2020-04-19T18:35:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registeredUserCanLogin -->
        <test-method status="PASS" signature="takeScreenShootFailure(org.testng.ITestResult)[pri:0, instance:tests.UserRegestrationTest@73ad2d6]" name="takeScreenShootFailure" is-config="true" duration-ms="1" started-at="2020-04-19T18:35:07Z" finished-at="2020-04-19T18:35:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registeredUserCanLogin status=SUCCESS method=UserRegestrationTest.registeredUserCanLogin()[pri:4, instance:tests.UserRegestrationTest@73ad2d6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShootFailure -->
        <test-method status="PASS" signature="stopDriver()[pri:0, instance:tests.UserRegestrationTest@73ad2d6]" name="stopDriver" is-config="true" duration-ms="697" started-at="2020-04-19T18:35:07Z" finished-at="2020-04-19T18:35:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- tests.UserRegestrationTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
